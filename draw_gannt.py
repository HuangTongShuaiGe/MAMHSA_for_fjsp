

colors = ['#4E79A7', '#F28E2C', '#E15759', '#76B7B2', '#59A14F', '#EDC949', '#B07AA1', '#FF9DA7', '#9C755F','#BAB0AC', '#FFDCB8', '#8CB7E4', '#AE87AD', '#FFBE89', '#D7813F', '#6699CC', '#E58606', '#5D69B1','#A1C882','#CCA56A',
    "#FF0000", "#00FF00", "#0000FF", "#FFFF00", "#FF00FF",
    "#00FFFF", "#800000", "#008000", "#000080", "#808000",
    "#800080", "#008080", "#C00000", "#00C000", "#0000C0",
    "#C0C000", "#C000C0", "#00C0C0", "#400000", "#004000",
    "#000040", "#404000", "#400040", "#004040", "#600000",
    "#006000", "#000060", "#606000", "#600060", "#006060",
    "#800000", "#008000", "#000080", "#808000", "#800080",
    "#008080", "#A00000", "#00A000", "#0000A0", "#A0A000",
    "#A000A0", "#00A0A0", "#C00000", "#00C000", "#0000C0",
    "#C0C000", "#C000C0", "#00C0C0", "#E00000", "#00E000",
    "#0000E0", "#E0E000", "#E000E0", "#00E0E0", "#100000",
    "#001000", "#000010", "#101000", "#100010", "#001010",
    "#120000", "#001200", "#000012", "#121200", "#120012",
    "#001212", "#140000", "#001400", "#000014", "#141400",
    "#140014", "#001414", "#160000", "#001600", "#000016",
    "#161600", "#160016", "#001616", "#180000", "#001800",
    "#000018", "#181800", "#180018", "#001818", "#1A0000",
    "#001A00", "#00001A", "#1A1A00", "#1A001A", "#001A1A",
    "#1C0000", "#001C00", "#00001C", "#1C1C00", "#1C001C",
    "#001C1C", "#1E0000", "#001E00", "#00001E", "#1E1E00",
    "#1E001E", "#001E1E", "#200000", "#002000", "#000020",
    "#202000", "#200020", "#002020", "#220000", "#002200",
    "#000022", "#222200", "#220022", "#002222", "#240000",
    "#002400", "#000024", "#242400", "#240024", "#002424",
    "#260000", "#002600", "#000026", "#262600", "#260026",
    "#002626", "#280000", "#002800", "#000028", "#282800",
    "#280028", "#002828", "#2A0000", "#002A00", "#00002A",
    "#2A2A00", "#2A002A", "#002A2A", "#2C0000", "#002C00",
    "#00002C", "#2C2C00", "#2C002C", "#002C2C", "#2E0000",
    "#002E00", "#00002E", "#2E2E00", "#2E002E", "#002E2E",
    "#300000", "#003000", "#000030", "#303000", "#300030",
    "#003030", "#320000", "#003200", "#000032", "#323200",
    "#320032", "#003232", "#340000", "#003400", "#000034",
    "#343400", "#340034", "#003434", "#360000", "#003600",
    "#000036", "#363600", "#360036", "#003636", "#380000",
    "#003800", "#000038", "#383800", "#380038", "#003838",
    "#3A0000", "#003A00", "#00003A", "#3A3A00", "#3A003A",
    "#003A3A", "#3C0000", "#003C00", "#00003C", "#3C3C00",
    "#3C003C", "#003C3C", "#3E0000", "#003E00", "#00003E",
    "#3E3E00", "#3E003E", "#003E3E", "#400000", "#004000",
    "#000040","#420000", "#004200", "#000042", "#424200",
    "#420042", "#004242", "#440000", "#004400", "#000044", "#444400",
    "#440044", "#004444", "#460000", "#004600", "#000046",
    "#464600", "#460046", "#004646", "#480000", "#004800",
    "#000048", "#484800", "#480048", "#004848", "#4A0000",
    "#004A00", "#00004A", "#4A4A00", "#4A004A", "#004A4A",
    "#4C0000", "#004C00", "#00004C", "#4C4C00", "#4C004C",
    "#004C4C", "#4E0000", "#004E00", "#00004E", "#4E4E00",
    "#4E004E", "#004E4E", "#500000", "#005000", "#000050",
    "#505000", "#500050", "#005050", "#520000", "#005200",
    "#000052", "#525200", "#520052", "#005252", "#540000",
    "#005400", "#000054", "#545400", "#540054", "#005454",
    "#560000", "#005600", "#000056", "#565600", "#560056",
    "#005656", "#580000", "#005800", "#000058", "#585800",
    "#580058", "#005858", "#5A0000", "#005A00", "#00005A",
    "#5A5A00", "#5A005A", "#005A5A", "#5C0000", "#005C00",
    "#00005C", "#5C5C00", "#5C005C", "#005C5C", "#5E0000",
    "#005E00", "#00005E", "#5E5E00", "#5E005E", "#005E5E",
    "#600000", "#006000", "#000060", "#606000", "#600060",
    "#006060", "#620000", "#006200", "#000062", "#626200",
    "#620062", "#006262", "#640000", "#006400", "#000064",
    "#646400", "#640064", "#006464", "#660000", "#006600",
    "#000066", "#666600", "#660066", "#006666", "#680000",
    "#006800", "#000068", "#686800", "#680068", "#006868",
    "#6A0000", "#006A00", "#00006A", "#6A6A00", "#6A006A",
    "#006A6A", "#6C0000", "#006C00", "#00006C", "#6C6C00",
    "#6C006C", "#006C6C", "#6E0000", "#006E00", "#00006E",
    "#6E6E00", "#6E006E", "#006E6E", "#700000", "#007000",
    "#000070", "#707000", "#700070", "#007070", "#720000",
    "#007200", "#000072", "#727200", "#720072", "#007272",
    "#740000", "#007400", "#000074", "#747400", "#740074",
    "#007474", "#760000", "#007600", "#000076", "#767600",
    "#760076", "#007676", "#780000", "#007800", "#000078",
    "#787800", "#780078", "#007878", "#7A0000", "#007A00",
    "#00007A", "#7A7A00", "#7A007A", "#007A7A", "#7C0000",
    "#007C00", "#00007C", "#7C7C00", "#7C007C", "#007C7C",
    "#7E0000", "#007E00", "#00007E", "#7E7E00", "#7E007E",
    "#007E7E", "#800000", "#008000", "#000080", "#808000",
    "#800080", "#008080", "#820000", "#008200", "#000082",
    "#828200", "#820082", "#008282", "#840000", "#008400",
    "#000084", "#848400","#840084", "#008484", "#860000", "#008600", "#000086",
    "#868600", "#860086", "#008686", "#880000", "#008800",
    "#000088", "#888800", "#880088", "#008888", "#8A0000",
    "#008A00", "#00008A", "#8A8A00", "#8A008A", "#008A8A",
    "#8C0000", "#008C00", "#00008C", "#8C8C00", "#8C008C",
    "#008C8C", "#8E0000", "#008E00", "#00008E", "#8E8E00",
    "#8E008E", "#008E8E", "#900000", "#009000", "#000090",
    "#909000", "#900090", "#009090", "#920000", "#009200",
    "#000092", "#929200", "#920092", "#009292", "#940000",
    "#009400", "#000094", "#949400", "#940094", "#009494",
    "#960000", "#009600", "#000096", "#969600", "#960096",
    "#009696", "#980000", "#009800", "#000098", "#989800",
    "#980098", "#009898", "#9A0000", "#009A00", "#00009A",
    "#9A9A00", "#9A009A", "#009A9A", "#9C0000", "#009C00",
    "#00009C", "#9C9C00", "#9C009C", "#009C9C", "#9E0000",
    "#009E00", "#00009E", "#9E9E00", "#9E009E", "#009E9E",
    "#A00000", "#00A000", "#0000A0", "#A0A000", "#A000A0",
    "#00A0A0", "#A20000", "#00A200", "#0000A2", "#A2A200",
    "#A200A2", "#00A2A2", "#A40000", "#00A400", "#0000A4",
    "#A4A400", "#A400A4", "#00A4A4", "#A60000", "#00A600",
    "#0000A6", "#A6A600", "#A600A6", "#00A6A6", "#A80000",
    "#00A800", "#0000A8", "#A8A800", "#A800A8", "#00A8A8",
    "#AA0000", "#00AA00", "#0000AA", "#AAAA00", "#AA00AA",
    "#00AAAA", "#AC0000", "#00AC00", "#0000AC", "#ACAC00",
    "#AC00AC", "#00ACAC", "#AE0000", "#00AE00", "#0000AE",
    "#AEAE00", "#AE00AE", "#00AEAE", "#B00000", "#00B000",
    "#0000B0", "#B0B000", "#B000B0", "#00B0B0", "#B20000",
    "#00B200", "#0000B2", "#B2B200", "#B200B2", "#00B2B2",
    "#B40000", "#00B400", "#0000B4", "#B4B400", "#B400B4",
    "#00B4B4", "#B60000", "#00B600", "#0000B6", "#B6B600",
    "#B600B6", "#00B6B6", "#B80000", "#00B800", "#0000B8",
    "#B8B800", "#B800B8", "#00B8B8", "#BA0000", "#00BA00",
    "#0000BA", "#BABA00", "#BA00BA", "#00BABA", "#BC0000"
    "#00BC00", "#0000BC", "#BCBC00", "#BC00BC", "#00BCBC",
    "#BE0000", "#00BE00", "#0000BE", "#BEBE00", "#BE00BE",
    "#00BEBE", "#C00000", "#00C000", "#0000C0", "#C0C000"]

import matplotlib.pyplot as plt
from datetime import datetime
import matplotlib.image as mpimg
from matplotlib.offsetbox import OffsetImage, AnnotationBbox
plt.rcParams['font.family'] = 'Times New Roman'
def draw_gantt_via_ListScheduleInfo(ScheduleInfo,is_save=True,is_show=False,text_size = 7,dpi = 300,next_times=[],save_dir = r"D:"):
    makespan=0
    for i in ScheduleInfo:
        try:
            machine_release=i[-1][2] + i[-1][3]
            makespan=max(int(machine_release),makespan)
        except IndexError:  # 捕获 IndexError 异常
            pass  # 如果访问列表时出现异常，跳过该元素
    #由于不同算例规模不一致，为了能更好的在画板上展示，此处对不同算例配置了不同的绘制设置，供读者参考
    # #MK01
    # plt.figure(figsize=(60, 20))
    # x_list=list(range(0, 42, 2))
    # # x_list.extend(next_times)
    # plt.xlim(0, 42)  # 设置 x 轴范围
    # x_text_size =48
    # y_text_size = 48
    # laegend_text_size = 48
    # lw = 40
    # lh = 3

    #MK03
    plt.figure(figsize=(150, 50))
    x_list = list(range(0, 204, 25))
    x_list.remove(200)
    #### x_list.extend(next_times)
    plt.xlim(0, 210)  # 设置 x 轴范围
    x_text_size = 64
    y_text_size = 118
    laegend_text_size = 108
    lw = 90
    lh = 3
    x_y_line_w = 8#线条粗细
    for spine in plt.gca().spines.values():
        spine.set_linewidth(x_y_line_w)
    plt.tick_params(axis='both', width=5,length=10,pad=30)#刻度线粗细

    # # MK08
    # plt.figure(figsize=(180, 60))
    # x_list = list(range(0, 530, 50))
    # ##### # x_list.extend(next_times)
    # plt.xlim(0, 530)  # 设置 x 轴范围
    # x_text_size = 118*1.2
    # y_text_size = 118*1.2
    # laegend_text_size = 108*1.2
    # lw = 90
    # lh = 2
    # x_y_line_w = 8  # 线条粗细
    # for spine in plt.gca().spines.values():
    #     spine.set_linewidth(x_y_line_w)
    # plt.tick_params(axis='both', width=5, length=10, pad=30)  # 刻度线粗细

    # # 18a
    # plt.figure(figsize=(180, 60))
    # x_list = list(range(0, 2220, 250))
    # x_list.remove(2000)
    # ##### # # x_list.extend(next_times)
    # plt.xlim(0, 2220)  # 设置 x 轴范围
    # x_text_size = 118 * 1.2
    # y_text_size = 118 * 1.2
    # laegend_text_size = 108 * 1.2
    # lw = 90
    # lh = 2
    # x_y_line_w = 8  # 线条粗细
    # for spine in plt.gca().spines.values():
    #     spine.set_linewidth(x_y_line_w)
    # plt.tick_params(axis='both', width=5, length=10, pad=30)  # 刻度线粗细


    x_list.append(makespan)
    plt.xticks(x_list)#画X轴
    plt.xticks(fontsize=x_text_size)
    plt.yticks(fontsize=y_text_size)

    Machine_num=len(ScheduleInfo)

    plt.ylim(-1, Machine_num+1.5)

    job_num = 0

    for i in range(Machine_num):#画方块
        plt.barh('Machine ' + str(i + 1), 0, left=0)
        Machine_i_ScheduleInfo=ScheduleInfo[i]
        for j in Machine_i_ScheduleInfo:
            if j[3]==0:
                continue
            plt.barh('Machine ' + str(i + 1), width=j[3], left=j[2], color=colors[j[1]],
                     edgecolor='black',height=0.5)
            if j[1]>job_num:
                job_num = j[1]
    job_str = []
    for i in range(job_num):
        job_str.append("Job "+str(i+1))
    # 添加图例
    handles = [plt.Line2D([0], [0], color=colors[i+1], lw=lw) for i in range(len(job_str))]
    plt.legend(handles, job_str, fontsize=laegend_text_size, loc='upper center',ncol=len(job_str) // 2 + (len(job_str) % 2 != 0) ,handlelength=lh,frameon=False,)#ncol表示一行放几个图标
    plt.xlabel('Time', fontweight='bold', fontsize=x_text_size)
    if is_save:
        #保存图片
        current_time = datetime.now().strftime('%Y_%m_%d_%H_%M_%S_%f')
        plt.savefig(save_dir +'/'+current_time+'.svg',dpi = dpi,bbox_inches='tight')
        pass
    if is_show:
        plt.show()
    plt.close()

